<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf_3d = noone;

direction = 270; // Camera View X
zdirection = 60; // Camera View Y
x = 0;
y = 512;
z = 2560; // Height of Camera
ratio = global.xview / global.yview;
fov = 45;

d = 0;

layer0 = background_get_texture(bg_snow);
layer1 = background_get_texture(bg_snow_to_ice);
layer2 = background_get_texture(bg_Ice);

timer = 0;

// Particles
particle1 = part_type_create();
part_type_shape(particle1,pt_shape_sphere);
part_type_size(particle1,0.05,0.1,0,0);
part_type_scale(particle1,1,1);
part_type_alpha1(particle1,0.5);
part_type_speed(particle1,2,5,0,0);
part_type_direction(particle1,260,280,0,0);
part_type_orientation(particle1,0,0,-1+random(2),0,1);
part_type_blend(particle1,true
);
part_type_life(particle1,400,400);

snow_particle_timer = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
spd=3;
if keyboard_check(vk_up) {y-=(spd/fps)*60;}
if keyboard_check(vk_down) {y+=(spd/fps)*60;}
if keyboard_check(vk_left) {x-=(spd/fps)*60;}
if keyboard_check(vk_right) {x+=(spd/fps)*60;}

if mouse_wheel_up() {z+=5;}
if mouse_wheel_down() {z-=5;}
*/

if global.pause==0{
    y += 16;
    if y &gt;= 4096 {y -= 4096;}
    
    d += 0.05;
    direction = 270 + lengthdir_y(15,d);
    
    // 3D Demo
    //direction = 270 - ((global.player_x/20)-11.25)
    //zdirection = 40 + ((global.player_y/30)-8)
    
    if timer == snow_particle_timer {
        snow_particle_timer += 1;
        part_particles_create_colour(global.Psys,random(480),(random(50)-50),particle1,make_colour_rgb(255,255,255), 1);
    }
    
    timer++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(surf_3d){
    surf_3d = surface_create(global.xview, global.yview);
}
surface_reset_target();
surface_set_target(surf_3d);
draw_clear_alpha(c_black, 1);

d3d_start();

// Camera
draw_set_color(c_white);

/*
direction -= (display_mouse_get_x()-640/2)/8;
zdirection += (display_mouse_get_y()-480/2)/8;
if zdirection &gt; 90 {zdirection = 90;}
if zdirection &lt; -90 {zdirection = -90;}
display_mouse_set(640/2,480/2);
*/

xto = x + lengthdir_x(180,direction) * lengthdir_x(1,zdirection);
yto = y + lengthdir_y(180,direction) * lengthdir_x(1,zdirection);
zto = z + lengthdir_y(180,zdirection);

d3d_set_projection_ext(x,y,z,xto,yto,zto,0,0,1,fov,ratio,1,32000);

// 3D Demo

draw_set_alpha(1);
d3d_draw_floor(-3072,1024*9,0,3072,1024*32,0,layer2,4,21); // Ice
d3d_draw_floor(-3072,1024*8,0,3072,1024*9,0,layer1,4,1); // Snow &gt; Ice transition
d3d_draw_floor(-3072,0,0,3072,1024*8,0,layer0,4,8); // Snow


// End 3D

d3d_end();
surface_reset_target();
surface_set_target(global.surf_game);
draw_surface(surf_3d, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
