<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9100</depth>
  <persistent>0</persistent>
  <parentName>obj_background_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf_tmp = noone;

num = 150;
spd = 10;
direction = 270;
d = 0;
for(var i = num; i &gt; 0; i--){
    // X, Y, Spd, Scale, Direction add
    bg[0, i] = irandom(global.xview+200)-100;
    bg[1, i] = -irandom(global.yview);
    bg[2, i] = spd - random(2);
    bg[3, i] = random(0.4) + 0.1;
    bg[4, i] = random(6) -3;
    bg[5, i] = irandom(359);
}

f = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_clear_alpha(c_black,1);
if !surface_exists(surf_tmp){
    surf_tmp = surface_create(global.xview,global.yview);
}
surface_set_target(surf_tmp);

if global.pause == 0{
    draw_set_color(c_black);
    draw_set_alpha(0.1);
    draw_rectangle(0, 0, global.xview, global.yview, false);
    draw_set_alpha(1);

    direction = 270 + (15 * -sin (d * pi / 180));
    d += 0.25;
    
    for(var i = 0; i &lt; num; i++){
        if bg[1, i] &lt; 450{
            bg[0, i] += (bg[2, i] * cos ((direction + bg[4, i]) * pi / 180));
            bg[1, i] += (bg[2, i] * -sin ((direction + bg[4, i]) * pi / 180));
            if bg[1, i] &gt; 0{
                bg[2, i] -= 0.05;
            }
        }else{
            bg[0, i] = irandom(global.xview+200)-100;
            bg[1, i] = 0 - irandom(30);
            bg[2, i] = spd - random(2);;
        }
    }
}

for(var i = 0; i &lt; num; i++){
    if bg[1, i] &gt; 0{
        var s = (bg[3, i] / global.yview * (bg[1, i]*2)) + 0.2;
    }else{
        var s = 0;
    }
    draw_sprite_ext(spr_stg2_bg, 0, bg[0, i], bg[1, i], s, s, bg[5, i], make_colour_rgb(150,125,255), 0.95);
}

surface_reset_target();
surface_set_target(global.surf_game);
draw_surface(surf_tmp,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
