<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
audio_play_sound(sfx_bomb,1,false)
audio_play_sound(sfx_master_spark,1,true);
/*
uni_time = shader_get_uniform(shd_shockwave,"time");
var_time_var = 0;

uni_location = shader_get_uniform(shd_shockwave,"location");
var_location_x = x - view_xview;
var_location_y = y - view_yview;

uni_resolution = shader_get_uniform(shd_shockwave,"resolution");
var_resolution_x = view_wview;
var_resolution_y = view_hview;

uni_shock_amplitude = shader_get_uniform(shd_shockwave,"shock_amplitude");
var_shock_amplitude = 10;

uni_shock_refraction = shader_get_uniform(shd_shockwave,"shock_refraction");
var_shock_refraction = 0.8;

uni_shock_width = shader_get_uniform(shd_shockwave,"shock_width");
var_shock_width = 0.1;

shader_enabled = true;
full_screen_effect = true;

shock_enabled = false;
*/
timer=60;
timer2=240;

audio_stop_sound(sfx_bomb1);
audio_play_sound(sfx_bomb1,1,false);
var dir = 0;
repeat(8)
    {
    action_create_object_motion(obj_bomb1_ball,x,y,0.5,dir)
    dir += 360/8;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pause=0 {

x=global.player_x;
y=global.player_y;

/*if timer&gt;0
    {
    timer-=1;
    shock_enabled = true;
    var_location_x = x - view_xview;
    var_location_y = y - view_yview;
    }
else if timer=0
    {
    shock_enabled = false;
    var_time_var = 0;
    }
*/
//5 second count down
timer2-=1

if timer2 == 5{
    screen_shake(30, 16);
}

if timer2 == 0{
    audio_stop_sound(sfx_master_spark);
    global.bomb=false;
    instance_destroy();
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fullscreen draw
/*
display_set_gui_size(view_wview,view_hview);

if shader_enabled and shock_enabled 
    {
        shader_set(shd_shockwave);
        var_time_var+=0.02; //Shockwave Speed
    }
    shader_set_uniform_f(uni_time, var_time_var);
    shader_set_uniform_f(uni_location, var_location_x, var_location_y);
    shader_set_uniform_f(uni_resolution, var_resolution_x, var_resolution_y);
    shader_set_uniform_f(uni_shock_amplitude, var_shock_amplitude);
    shader_set_uniform_f(uni_shock_refraction, var_shock_refraction );
    shader_set_uniform_f(uni_shock_width, var_shock_width);
    if full_screen_effect draw_surface(application_surface,0,0);
shader_reset();
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
