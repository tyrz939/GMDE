<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
//Draw Particles
part_system_drawit(global.Psys);

// Laser shots
if instance_exists(obj_Claser_parent0)
{
    draw_set_blend_mode(bm_add);
    with obj_Claser_parent0
    {
        for(var i = 0; i &lt; a; i++)
        {
            if obj[4,i] == true &amp;&amp; (obj[0,i] != xstart || obj[1,i] != ystart)
            {
                if obj[5,i] == false{
                    draw_sprite_ext(sprite_index, 0, round(obj[0,i]), round(obj[1,i]), obj[2,i], obj[2,i], 0, col, 1);
                }else{
                    if global.pause == 0
                    {
                        xd = obj[0,i]+(1-random(2));
                        yd = obj[1,i]+(1-random(2));
                    }
                    draw_sprite_ext(sprite_index, 0, xd, yd, obj[2,i], obj[2,i], 0, gzcol, 1);
                }
            }
        }
    }
    draw_set_blend_mode(bm_normal);
}

if instance_exists(obj_prim_laser_parent)
{
    with obj_prim_laser_parent
    {
        draw_set_colour(c_white);
        tex = sprite_get_texture(sprite_index, image_index);
        draw_primitive_begin_texture(pr_trianglestrip, tex);
        for(var i = 0; i &lt; a; i += 1){
            var width = obj[2,i];
            draw_vertex_texture(obj[0,i] + lengthdir_x(width, obj[6,i]+90), obj[1,i] + lengthdir_y(width, obj[6,i]+90), i/a, 0);
            draw_vertex_texture(obj[0,i] + lengthdir_x(width, obj[6,i]-90), obj[1,i] + lengthdir_y(width, obj[6,i]-90), i/a, 1);
        }
        draw_primitive_end();
    }
}

//Draw Shots
if instance_exists(obj_shot_parent0)
    {
    with obj_shot_parent0
        {
        if !grazing
            {draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);}
        else
            {
            if global.pause == 0
                {
                xd = x+(1-random(2));
                yd = y+(1-random(2));
                }
            draw_sprite_ext(sprite_index, image_index, xd, yd, image_xscale, image_yscale, image_angle, global.graze_col, image_alpha);
            }
        }
    }

if instance_exists(obj_shot_parent2)
    {
    with obj_shot_parent2
        {
        if !grazing
            {draw_sprite_ext(sprite_index,image_index,round(x),round(y), image_xscale, image_yscale, image_angle, image_blend, image_alpha);}
        else
            {
            if global.pause == 0
                {
                xd = x+(1-random(2));
                yd = y+(1-random(2));
                }
            draw_sprite_ext(sprite_index, image_index, xd, yd, image_xscale, image_yscale, image_angle, global.graze_col, image_alpha);
            }
        }
    }

if instance_exists(obj_shot_parent1)
    {
    with obj_shot_parent1
        {
        if !grazing
            {draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);}
        else
            {
            if global.pause == 0
                {
                xd = x+(1-random(2));
                yd = y+(1-random(2));
                }
            draw_sprite_ext(sprite_index, image_index, xd, yd, image_xscale, image_yscale, image_angle, global.graze_col, image_alpha);
            }
        }
    }

//Drawing Blend Mode Shots
if instance_exists(obj_shot_parent3)
    {
    //draw_set_blend_mode(bm_add);
    with obj_shot_parent3
        {
        if !grazing
            {
            draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
            draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
            }
        else
            {
            if global.pause == 0
                {
                xd = x+(1-random(2));
                yd = y+(1-random(2));
                }
            draw_sprite_ext(sprite_index, image_index, xd, yd, image_xscale, image_yscale, image_angle, global.graze_col, image_alpha);
            draw_sprite_ext(sprite_index, image_index, xd, yd, image_xscale, image_yscale, image_angle, global.graze_col, image_alpha);
            }
        }
    //draw_set_blend_mode(bm_normal);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
