<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fairy3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>obj_boss_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed=0;

event_inherited();
hp=25000;
maxhp=hp;

timer = 0;

/*
0 = Boarder of wave and particle.
1 = Custom object system test.
2 = Curvy Laser test.
*/
run = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pause==0{image_speed=0.2;

switch run
{
    /*---------------------------
    Boarder of wave and particle.
    ---------------------------*/
    case 0:
        if timer == 0
        {
            wait = 0;
            dir0 = 0;
            o = 7;
            shot[0] = BLUE;
            shot[1] = PURPLE;
            shot[2] = PINK;
            shot[3] = RED;
            shot[4] = ORANGE;
            shot[5] = YELLOW;
            shot[6] = GREEN;
        }
        if timer == wait
        {
            wait += 2;
            dir0 += 0.75;
            dir1 = lengthdir_y(2000,dir0);
            dir2 = dir1;
            for(var i = 0; i &lt; o; i++)
            {
                shot_create( obj_arrow, shot[i],x+lengthdir_x(15,dir2),y+lengthdir_y(15,dir2),1,dir2, 16);
                dir2 += 360/o;
            }
        }
        break;
    
    /*---------------------------
    Custom object system test.
    ---------------------------*/
    case 1:
        /* Start event */
        if timer == 0
        {
            a = 15000;
            l = a;
            r = global.shot5;
            var dir = 0
            for(var i = 0; i &lt; a; i++)
            {
            /* 0 = X, 1 = Y, 2 = Direction, 3 = Speed, 4 = Alive?, 5 = Sprite */
                obj[0,i] = x + 15 * cos (dir * pi / 180);
                obj[1,i] = y + 15 * -sin (dir * pi / 180);
                obj[2,i] = dir;
                obj[3,i] = 0.1 + random(0.9);
                obj[4,i] = true;
                obj[5,i] = spr_outlineball;
                dir += 360/a;
            }
        }
        /* Loop Event */
        else
        {
            for(var i = 0; i &lt; a; i++;)
            {
                if obj[4,i] == true
                {
                    obj[0,i] += obj[3,i] * cos (obj[2,i] * pi / 180);
                    obj[1,i] += obj[3,i] * -sin (obj[2,i] * pi / 180);
                    var d = sqrt(sqr(obj[0,i] - global.player_x) + sqr(obj[1,i] - global.player_y));
                    if d &lt; r
                    {
                        global.player_death = true;
                        obj[4,i] = false;
                        l--;
                    }
                    if obj[0,i] &lt; -7 || obj[0,i] &gt; 457 || obj[1,i] &lt; -17 || obj[1,i] &gt; 497
                    {
                        obj[4,i] = false;
                        l--;
                    }
                }
            }
            if l = 0
            {
                timer = -1;
                l = 0;
            }
        }
        break;
    
    /*---------------------------
    Curvy Laser test.
    ---------------------------*/
    case 2:
        if timer == 0{
            wait0 = 0;
        }
        if timer &gt;= wait0{
            wait0 += 120;
            var dir = 90;
            var rep = 32;
            repeat rep{
                action_create_object_motion(obj_curv_laser_prim,x+lengthdir_x(15,dir),y+lengthdir_y(15,dir),1,dir);
                dir += 360/rep;
            }
        }
        break;
    case 3:
        if timer == 0 {
            wait = 180;
        }
        if timer == wait {
            wait += 180;
            var d = point_direction(x, y, global.player_x, global.player_y);
            shot_pattern_arc(obj_ball, RED, x, y, 8, 45, d, 2, 15, 16);
        }
        break;
}
timer++;
}else {image_speed=0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

draw_set_alpha(1);
if run = 1 &amp;&amp; timer &gt; 0
{
    //draw_set_blend_mode(bm_add);
    for(var i = 0; i &lt; a; i++)
    {
        if obj[4,i] == true
        {
            draw_sprite_ext(obj[5,i], 0, round(obj[0,i]), round(obj[1,i]),1,1,0,image_blend,1);
        }
    }
    //draw_set_blend_mode(bm_normal);
    draw_set_color(c_black);
    draw_set_font(font3);
    draw_text(50,50,string("New Objects: ") + string(l));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,17</point>
    <point>18,18</point>
  </PhysicsShapePoints>
</object>
