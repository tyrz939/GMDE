<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "BGM";
menu[1] = "Vsync";
menu[2] = "CRT Effect";
menu[3] = "Key Rebinding";
menu[4] = "Back";

space = 50;
mpos = 0;

//For flashy selection
alpha = 1;
alpha_dir = 0;


//On/Off part
if global.bgm == 1
    {on[0] = "On";}
else
    {on[0] = "Off";}

if global.vsync == 1
    {on[1] = "On";}
else
    {on[1] = "Off";}

if global.scanlines == 1
    {on[2] = "On";}
else
    {on[2] = "Off";}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_menu_step();

if input.bomb_press {
    scr_save();
    instance_destroy();
    instance_activate_object(obj_menu);
    audio_stop_sound(sfx_menu_sel);
    audio_play_sound(sfx_menu_back,1,false);
    exit;
}

var push = 0;
push = max(input.shoot_press,0);

if push == 1 {
    audio_stop_sound(sfx_menu_sel);
    audio_play_sound(sfx_menu_sel,1,false);
    switch mpos {
        case 0: //BGM
            if global.bgm == 1 {
                global.bgm = 0;
                scr_music_stop();
            } else {
                global.bgm = 1;
                music_start(bgm_menu);
            }
            break;
        case 1: //VSync
            if global.vsync == 1 {
                display_reset(0, false);
                global.vsync=0;
            } else {
                display_reset(0, true);
                global.vsync=1;
            }
            break;
        case 2: //Scanlines
            global.scanlines = !global.scanlines;
            break;
        case 3: //Rebind Menu
            instance_deactivate_object(self);
            instance_create(x,y,obj_rebind_menu);
            break;
        case 4: //Back
            scr_save();
            instance_destroy();
            instance_activate_object(obj_menu);
            break;
    }
}

//On/Off part
if global.bgm == 1
    {on[0] = "On";}
else
    {on[0] = "Off";}

if global.vsync == 1
    {on[1] = "On";}
else
    {on[1] = "Off";}

if global.scanlines == 1
    {on[2] = "On";}
else
    {on[2] = "Off";}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_title_draw();

scr_menu_draw();

for (m1 = 0; m1 &lt; array_length_1d(on); m1++) {
    draw_set_alpha(0.5);
    draw_set_colour(c_black);
    draw_text(x+250+2,y+(m1*space)+2,string(on[m1]));
    draw_set_alpha(1);
    draw_set_colour(c_gray);
    draw_text(x+250,y+(m1*space),string(on[m1]));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,10</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
