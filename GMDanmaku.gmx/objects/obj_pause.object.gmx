<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Shader Blur

draw_set_color(c_white);

uni_resolution_hoz = shader_get_uniform(shd_gaussian_horizontal,"resolution");
uni_resolution_vert = shader_get_uniform(shd_gaussian_vertical,"resolution");
//var_resolution_x = view_wview;
//var_resolution_y = view_hview;
var_resolution_x = global.xview;
var_resolution_y = global.yview;

shader_enabled = true;

tmp_surf0 = noone;
tmp_surf1 = noone;

alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_automatic_update(global.Psys, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pause==0 {instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//display_set_gui_size(640,480);
//Do horizontal blur first
if global.GFX{
    // Tmp Surf 0
    draw_set_color(c_white);
    draw_set_alpha(1);
    surface_reset_target();
    if surface_exists(tmp_surf0){
        surface_set_target(tmp_surf0);
        draw_clear_alpha(c_black,0);
    }else{
        tmp_surf0 = surface_create(global.xview,global.yview);
        surface_set_target(tmp_surf0);
        draw_clear_alpha(c_black,0);
    }
    surface_reset_target();
    // Tmp Surf 1
    if surface_exists(tmp_surf1){
        surface_set_target(tmp_surf1);
        draw_clear_alpha(c_black,0);
    }else{
        tmp_surf1 = surface_create(global.xview,global.yview);
        surface_set_target(tmp_surf1);
        draw_clear_alpha(c_black,0);
    }
    // Do X blur
    surface_reset_target();
    surface_set_target(tmp_surf0);
    shader_set(shd_gaussian_horizontal);
    shader_set_uniform_f(uni_resolution_hoz, var_resolution_x, var_resolution_y);
    draw_surface(global.surf_game,0,0);
    shader_reset();
    surface_reset_target();
    surface_set_target(tmp_surf1);
    // Do Y blur
    shader_set(shd_gaussian_vertical);
    shader_set_uniform_f(uni_resolution_vert, var_resolution_x, var_resolution_y);
    if surface_exists(tmp_surf0){
        draw_surface(tmp_surf0,0,0);
    }
    shader_reset();
    surface_reset_target();
    surface_set_target(global.surf_game);
    if alpha &lt; 1{
        alpha += 0.1;
    }
    draw_set_alpha(alpha);
    draw_surface(tmp_surf1,0,0);
    // Pause BG color here
    draw_sprite_ext(spr_pausebg,0,x,y,1,1,0,make_colour_rgb(50,50,50),alpha *0.5);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>400,300</point>
    <point>400,400</point>
  </PhysicsShapePoints>
</object>
