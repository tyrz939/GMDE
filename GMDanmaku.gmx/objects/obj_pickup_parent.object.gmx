<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction=90;
spd=3;
p=1;
l=1;
auto_collect0=false;
auto_collect1=false;
timer = 0;

start1=true;
blur_start=true;

above = false;

pickup_dist = 10;

back_spin = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if global.grazeSlow == 0
    {
    if l == 0 {l = 1; spd *= 4;}
    if spd&gt;-4
        {spd-=0.05;}
    }
else
    {
    if l == 1 {l = 0; spd /= 4;}
    if spd&gt;-1
        {spd-=0.0125;}
    }

x += (spd * cos (direction * pi / 180)) * global.gamespeed;
y += (spd * -sin (direction * pi / 180)) * global.gamespeed;

if timer &lt; 24 {image_angle += 45;}
timer += 1;

//Kill
if y&gt;=480
    {instance_destroy();}

//Show arrow when above screen
if y &lt; -8
    {above = true;}
else
    {above = false;}

//Collect all trigger

if global.collect==true// &amp;&amp; global.pow=128
    {auto_collect0=true;}

//if global.bomb==true
//    {auto_collect=true;}

if auto_collect0==true{
    direction=(point_direction(x, y, global.player_x,global.player_y));
    spd=8;
}
if auto_collect1==true{
    direction=(point_direction(x, y, global.player_x,global.player_y));
    spd += 0.2;
}

//Collect when close

if point_distance(x, y, global.player_x, global.player_y) &lt; 50 &amp;&amp; auto_collect1 == false{
    direction=(point_direction(x, y, global.player_x,global.player_y));
    spd=2;
    auto_collect1 = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//script_execute(scr_motion_blur2);
if global.pause == 0{
    if !global.grazeSlow == 0{
        xdraw = x + irandom(2)-1;
        ydraw = y + irandom(2)-1;
        var c0 = color_get_red(col) / 3;
        var c1 = color_get_green(col) / 3;
        var c2 = color_get_blue(col) / 3;
        gzcol = make_color_rgb(c0, c1, c2);
    }else{
        xdraw = round(x);
        ydraw = round(y);
        gzcol = col;
    }
    back_spin += 3;
}

if !above{
    draw_sprite_ext(spr_powerup,0,xdraw,ydraw,image_xscale,image_yscale,image_angle,gzcol,image_alpha);
    draw_sprite_ext(spr_powerup_bg,0,xdraw,ydraw,image_xscale,image_yscale,back_spin,gzcol,0.3);
}else{
    draw_sprite_ext(spr_Pabove,0,xdraw,5,image_xscale,image_yscale,0,gzcol,0.5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
