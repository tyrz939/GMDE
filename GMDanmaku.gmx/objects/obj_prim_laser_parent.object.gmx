<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_shot</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = speed / rep;
speed = 0;
start = true;
grazing = false;

gzcol = make_colour_rgb(255,255,255);

xd = x;
yd = y;

timer = 0;

//start = 0;
a *= rep;
l = a;
var d = 0;
var c = 360 / a;
for(var i = a; i &gt;= 0; i--){
/* 0 = X, 1 = Y, 2 = Scale, 3 = Counter, 4 = Alive? 5 = Grazing */
    obj[0,i] = x;
    obj[1,i] = y;
    obj[2,i] = 0.35;
    obj[3,i] = 0 + d; // LENGTH * sin (DIRECTION * pi / 180);
    obj[4,i] = true;
    obj[5,i] = false;
    obj[6,i] = direction;
    d += c;
}

dir0 = 135;

kill = false;
sl = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.clear==true //Clear Screen!
{
    instance_destroy();
    shot_die1(col);
    if global.star==true
    {
        instance_create(x,y,obj_star_block);
    }
}

// Move
x += (spd * cos (direction * pi / 180));
y += (spd * -sin (direction * pi / 180));

var px = global.player_x;
var py = global.player_y;

// Step loop
l = a;
for(var i = 0; i &lt; a; i++)
{
    if i &lt; a-1
    {
        obj[0,i] = obj[0,i + 1];
        obj[1,i] = obj[1,i + 1];
        obj[6,i] = obj[6,i + 1];
    }
    else
    {
        obj[0,i] = x;
        obj[1,i] = y;
        obj[6,i] = direction;
    }
    obj[2,i] = w0 + (w1 * sin (obj[3,i] * pi / 360));
    var d = sqrt(sqr(obj[0,i] - px) + sqr(obj[1,i] - py));
    if d &lt; (0.7 * obj[2,i]) + 30
    {
        global.grazeSlow = 20;
        global.graze += 0.01;
        global.score += 5;
        obj[5,i] = true;
        if d &lt; 0.7 * obj[2,i] &amp;&amp; obj[4,i]
        {
            if i &gt; 3 &amp;&amp; i &lt; a - 3
            {
                obj[4,i] = false;
                kill = true;
                part_particles_create_colour(global.Psys, obj[0,i], obj[1,i], global.part_shot_die, col, 1);
                global.player_death = true;
            }
        }
    }
    else
    {
        obj[5,i] = false;
    }
    if global.bomb == true
    {
        if collision_circle(obj[0,i], obj[1,i], 10, obj_bombP, false, true)
        {
            kill = true;
        }
    }
    if kill &amp;&amp; obj[4,i]
    {
        if sl == 0
        {
            instance_create(obj[0,i], obj[1,i], obj_star_block);
            part_particles_create_colour(global.Psys, obj[0,i], obj[1,i], global.part_shot_die, col, 1);
            sl = 10;
        }
        sl--;
        obj[4,i] = false;
    }
    if obj[0,i] &lt; -16 || obj[0,i] &gt; global.xview +16 || obj[1,i] &lt; -16 || obj[1,i] &gt; global.yview +16
    {
        if obj[4,i]
        {
            l--;
        }
    }
    if !obj[4,i]
    {
        l--;
    }
}
// Kill Shots
if l == 0
    {instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_colour(c_white);
tex = sprite_get_texture(sprite_index, image_index);
draw_primitive_begin_texture(pr_trianglestrip, tex);
for(var i = 0; i &lt; a; i++){
    if obj[4,i] == true &amp;&amp; (obj[0,i] != xstart || obj[1,i] != ystart){
        var width = obj[2,i];
        draw_vertex_texture(obj[0,i] + lengthdir_x(width, obj[6,i]+90), obj[1,i] + lengthdir_y(width, obj[6,i]+90), i/a, 0);
        draw_vertex_texture(obj[0,i] + lengthdir_x(width, obj[6,i]-90), obj[1,i] + lengthdir_y(width, obj[6,i]-90), i/a, 1);
    }
}
draw_primitive_end();*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
