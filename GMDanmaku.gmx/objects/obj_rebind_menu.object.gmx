<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "Up";
menu[1] = "Down";
menu[2] = "Left";
menu[3] = "Right"
menu[4] = "Focus";
menu[5] = "Shoot";
menu[6] = "Bomb";
menu[7] = "Defaults";
menu[8] = "Back";

keys[0] = "Default: Up Arrow";
keys[1] = "Default: Down Arrow";
keys[2] = "Default: Left Arrow";
keys[3] = "Default: Right Arrow";
keys[4] = "Default: Shift";
keys[5] = "Default: Z";
keys[6] = "Default: X";

key_set=false;
rebind=false;
space = 50;
mpos = 0;

//For flashy selection
alpha=1;
alpha_dir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if rebind=false {

if input.bomb_press
    {
    instance_destroy();
    instance_activate_object(obj_options_menu);
    audio_stop_sound(sfx_menu_sel);
    audio_play_sound(sfx_menu_sel,1,false);
    exit;
    }

keyboard_lastkey=-1; //Reset Last Key reading.
scr_menu_step();

push = 0;
push = max(input.shoot_press,0);

if (push == 1) &amp;&amp; (mpos&lt;array_length_1d(menu)-2)
    {
    audio_stop_sound(sfx_menu_sel);
    audio_play_sound(sfx_menu_sel,1,false);
    rebind=true;
    }
else if (push == 1) &amp;&amp; (mpos&gt;=array_length_1d(menu)-2)
    {key_set=true;}

if (key_set == true)
    {
    audio_stop_sound(sfx_menu_sel);
    audio_play_sound(sfx_menu_sel,1,false);
    key_set=false;
    switch (mpos)
        {
        case 0:
            {
            global.Up=key; break;
            }
        case 1:
            {
            global.Down=key; break;
            }
        case 2:
            {
            global.Left=key; break;
            }
        case 3:
            {
            global.Right=key; break;
            }
        case 4:
            {
            global.Focus=key; break;
            }
        case 5:
            {
            global.Shoot=key; break;
            }
        case 6:
            {
            global.Bomb=key; break;
            }
        case 7:
            {
            global.Up=vk_up;
            global.Down=vk_down;
            global.Left=vk_left;
            global.Right=vk_right;
            global.Focus=vk_shift;
            global.Shoot=(ord('Z'));
            global.Bomb=(ord('X'));
            break; //Defaults
            }
        case 8:
            {
            scr_save();
            instance_destroy();
            instance_activate_object(obj_options_menu);
            break;
            }
        }
    }

}

if (rebind=true) &amp;&amp; (keyboard_lastkey != -1)
    {
    key=keyboard_lastkey;
    rebind=false;
    key_set=true;
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_title_draw();

scr_menu_draw();
var i; 

draw_set_colour(c_white);
for (i =0; i &lt; array_length_1d(keys); i+=1)
    {draw_set_alpha(0.5);
    draw_set_colour(c_black);
    draw_text(x+175+2,y+(i*space)+2,string(keys[i]))
    draw_set_alpha(1);
    draw_set_colour(c_gray); 
    draw_text(x+175,y+(i*space),keys[i])
    draw_set_alpha(alpha);
    draw_set_colour(global.text_pulse_color);
    if i==mpos {draw_text(x+175,y+(i*space),string(keys[i]))}
    draw_set_alpha(1);
    }
    
if rebind=true
    {
    draw_set_alpha(0.8);
    draw_sprite_ext(spr_black,0,640,480,1,1,image_angle,image_blend,0.8)
    draw_set_alpha(1);
    draw_set_halign(fa_middle);
    draw_set_valign(fa_middle);
    draw_set_colour(c_white);
    draw_set_font(font_menu);
    draw_text(640,480,"Press Key")
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,10</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
