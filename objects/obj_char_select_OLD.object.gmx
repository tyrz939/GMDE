<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "Reimu";
menu[1] = "Marisa";
menu[2] = "Mima";
menu[3] = "Yuuka";

push=0;
space = 50;
mpos = 0;

spos = 0;
rows = 2;
collums = 2;
length = collums*rows;

//For flashy selection
alpha = 1;
alpha_dir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if input.left
{
    audio_stop_sound(sfx_menu_move);
    audio_play_sound(sfx_menu_move,1,false);
    var tmp = mpos
    for(i = 0; i &lt; length; i += collums)
    {
        if mpos == i
            {mpos += collums-1;}
    }
    if tmp == mpos
        {mpos -= 1;}
}
if input.right
{
    audio_stop_sound(sfx_menu_move);
    audio_play_sound(sfx_menu_move,1,false);
    var tmp = mpos
    for(i = 0; i &lt;= length; i += collums)
    {
        if mpos == i-1
            {mpos -= collums-1;}
    }
    if tmp == mpos
        {mpos += 1;}
}
if input.up
{
    audio_stop_sound(sfx_menu_move);
    audio_play_sound(sfx_menu_move,1,false);
    var tmp = mpos
    for(i = 0; i &lt; length; i += rows)
    {
        if mpos &lt; collums
            {mpos += (rows-1)*collums;}
    }
    if tmp == mpos
        {mpos -= collums;}
}
if input.down
{
    audio_stop_sound(sfx_menu_move);
    audio_play_sound(sfx_menu_move,1,false);
    var tmp = mpos
    for(i = 1; i &lt;= length; i += rows)
    {
        if mpos &gt;= (rows-1)*collums
            {mpos -= (rows-1)*collums;}
    }
    if tmp == mpos
        {mpos += collums;}
}

if input.bomb_press
{
    instance_destroy();
    if global.level != obj_extra
        {instance_activate_object(obj_diff_sel);}
    else
        {instance_activate_object(obj_menu);}
    audio_stop_sound(sfx_menu_sel);
    audio_play_sound(sfx_menu_sel,1,false);
    exit;
}

var push = 0;
push = max(input.shoot_press,0);

if push == 1
{
    audio_stop_sound(sfx_menu_sel);
    audio_play_sound(sfx_menu_sel,1,false);
    switch mpos
    {
        case 0:
            global.char=0; //Reimu
//            instance_create(x,y,obj_ABsel);
            instance_deactivate_object(self);
            break;
        case 1:
            global.char=2; //Marisa
//            instance_create(x,y,obj_ABsel);
            instance_deactivate_object(self);
            break;
        case 2:
            audio_play_sound(sfx_menu_togame,1,false);
            global.char=4; //Mima
            room_goto (room_ingame);
            break;
        case 3:
            audio_play_sound(sfx_menu_togame,1,false);
            global.char=5; //Yuuka
            room_goto (room_ingame);
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xpos = 320;
ypos = 400;
for(i = 0; i &lt; length; i++)
{
    if mpos == i
        {col = 255;}
    else
        {col = 100;}
    draw_sprite_ext(spr_char_0,i,xpos,ypos,1,1,0,make_color_rgb(col,col,col),1);
    if xpos == 320 {xpos = 960;} else {xpos = 320; ypos = 700;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,10</point>
    <point>10,10</point>
  </PhysicsShapePoints>
</object>
