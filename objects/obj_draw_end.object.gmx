<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shake = false;

if global.scanlines{
    crt_surface = surface_create(global.xview, global.yview);
    
    crt_surface_scale = 2;
    
    crt_surface_width  = surface_get_width(crt_surface) * crt_surface_scale;
    crt_surface_height = surface_get_width(crt_surface) * crt_surface_scale;
    
    samp_CRT = shader_get_sampler_index(sh_CRT, "samp_CRT");
    tex_CRT =  surface_get_texture(crt_surface);
    
    textureBaseSize = shader_get_uniform(sh_CRT, "textureBaseSize");
    textureScaledSize = shader_get_uniform(sh_CRT, "textureScaledSize");
    distort = shader_get_uniform(sh_CRT, "distort");
    distortion = shader_get_uniform(sh_CRT, "distortion");
    border = shader_get_uniform(sh_CRT, "border");
    
    var_distortion_ammount = 0.12;
    var_distort = true;
    var_border = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(1280,960);
if global.scanlines{
    if !surface_exists(crt_surface){
        crt_surface = surface_create(global.xview, global.yview);
        tex_CRT =  surface_get_texture(crt_surface);
    }
    surface_copy(crt_surface, 0, 0, global.surf_game);
    
    shader_set(sh_CRT);
    
    texture_set_repeat_ext(samp_CRT, false);
    texture_set_stage(samp_CRT, tex_CRT);
    
    crt_surface_width  = global.xview * crt_surface_scale;
    crt_surface_height = global.yview * crt_surface_scale;
    
    shader_set_uniform_f(textureBaseSize, global.xview, global.yview);
    shader_set_uniform_f(textureScaledSize, crt_surface_width, crt_surface_height);
    shader_set_uniform_f(distort, var_distort);
    shader_set_uniform_f(distortion, var_distortion_ammount);
    shader_set_uniform_f(border, var_border);
    
    draw_surface_part_ext(global.surf_game, 0, 0, global.xview, global.yview, xd*2, yd*2, crt_surface_scale, crt_surface_scale, c_white, 1);
    
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);

surface_reset_target();

if !shake || !global.pause{
    xd = global.xvstart;
    yd = global.yvstart;
}else{
    if shake_timer == duration{
        shake = false;
    }
    shake_timer++;
    shake_rnd -= intensity/duration
    xd = global.xvstart + (irandom(shake_rnd) - shake_rnd*0.5);
    yd = global.yvstart + (irandom(shake_rnd) - shake_rnd*0.5);
}

if !global.scanlines{
    draw_surface(global.surf_game, xd, yd);
}
texture_set_interpolation(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
