<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.reset=0;
global.quit=false;



global.pause = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Psysm = part_system_create(); // Particle System
global.Psys = part_system_create(); // Particle System
part_system_automatic_update(global.Psys, true);

room_goto (room_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Load Stuff
if (file_exists("save.ini"))
{
    ini_open("save.ini");
    //Options
    global.resolution= ini_read_real("Options","Resolution",0);
    global.bgm= ini_read_real("Options","BMG",1);
    global.fullscreen= ini_read_real("Options","Fullscreen",1);
    global.vsync= ini_read_real("Options","Vsync",1);
    global.scanlines= ini_read_real("Options","Scanlines",0);
    //Scores
    global.highscore0= ini_read_real("HighScores","EasyScore",0);
    global.highscore1= ini_read_real("HighScores","NormalScore",0);
    global.highscore2= ini_read_real("HighScores","HardScore",0);
    global.highscore3= ini_read_real("HighScores","LunaticScore",0);
    global.highscore4= ini_read_real("HighScores","ExtraScore",0);
    global.extra_stage= ini_read_real("ExtraStage","ExtraStage",0);
    //Key Binds
    global.Up= ini_read_real("KeyBinds","Up",0);
    global.Down= ini_read_real("KeyBinds","Down",0);
    global.Left= ini_read_real("KeyBinds","Left",0);
    global.Right= ini_read_real("KeyBinds","Right",0);
    global.Focus= ini_read_real("KeyBinds","Focus",0);
    global.Shoot= ini_read_real("KeyBinds","Shoot",0);
    global.Bomb= ini_read_real("KeyBinds","Bomb",0);
    
    ini_close();
}
else
{
    //Options
    global.resolution=2;
    global.bgm=1;
    global.fullscreen=1;
    global.vsync=1;
    global.scanlines=0;
    //Scores
    global.highscore0=0
    global.highscore1=0
    global.highscore2=0
    global.highscore3=0
    global.highscore4=0
    global.extra_stage=0
    //Key Binds
    global.Up=vk_up;
    global.Down=vk_down;
    global.Left=vk_left;
    global.Right=vk_right;
    global.Focus=vk_shift;
    global.Shoot=(ord('Z'));
    global.Bomb=(ord('X'));
}

if global.fullscreen==1 {window_set_fullscreen(1);}
if global.vsync==1 {display_reset(0, true);}
//Resolution set:
if global.resolution==0 {window_set_size(640,480); global.h_res=640; global.v_res=480;}
if global.resolution==1 {window_set_size(960,720); global.h_res=960; global.v_res=720;}
if global.resolution==2 {window_set_size(1280,960); global.h_res=1280; global.v_res=960;}

config();
date_set_timezone(timezone_local);
global.demo_play = false;
global.term = false;
global.player = noone;

// Get shortcut parameters
p = parameter_count();
if p &gt; 0
{
    for (i = 0; i &lt; p; i += 1)
    {
       if parameter_string(i + 1) == string("-debug") {global.debug = true;}
    }
}

if global.debug == true {show_debug_overlay(true);}

// Shader check
global.GFX = false;
if shader_is_compiled(shd_gaussian_vertical) &amp;&amp; shader_is_compiled(shd_boss) &amp;&amp; shader_is_compiled(shd_gaussian_horizontal)
    {global.GFX = true;}

// Input Create
instance_create(0,0,input);
instance_create(0,0,terminal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>400,300</point>
    <point>400,400</point>
  </PhysicsShapePoints>
</object>
